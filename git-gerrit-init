#!/bin/bash

set -o errexit
set -o pipefail

hostname_default=apipe-review.gsc.wustl.edu
port_default=29418
remote_name_default=origin

OPTS_SPEC="\
git gerrit init <gerrit_project_name>

This has two purposes:

1) Setup the Change-Id hook that is required on most Gerrit projects.

2) Migrate an existing repo/clone from the old remote to the Gerrit remote.

You will have to run this any time you clone a repo, even if you clone it from
Gerrit.  This is because Git hooks are not tracked by Git so are not part of
the repo/clone.

--
 Available options are
h                 show the help
p,port=           port (defaults to ${port_default})
H,hostname=       hostname (defaults to ${hostname_default})
n,name=           remote name (defaults to ${remote_name_default})
u,username=       username
"

eval "$(echo "$OPTS_SPEC" | git rev-parse --parseopt -- "$@" || echo exit $?)"

PATH=$PATH:$(git --exec-path)
. git-sh-setup

require_work_tree

while [ $# -gt 0 ]; do
    opt="$1"
    shift
    case "$opt" in
        -p|--port) port="$1"; shift ;;
        -H|--hostname) hostname="$1"; shift ;;
        -n|--name) remote_name="$1"; shift ;;
        -u|--username) username="$1"; shift ;;
        --) break ;;
        *) die "Unexpected option: $opt" ;;
    esac
done

if [ -z "$hostname" ]; then
    hostname=$hostname_default
fi
if [ -z "$port" ]; then
    port=$port_default
fi
if [ -z "$remote_name" ]; then
    remote_name=$remote_name_default
fi
if [ -z "$username" ]; then
    username=""
fi

if [ -z "$1" ]; then
    die "gerrit_project_name is required"
else
    repo="$1"
    shift
fi

set -o nounset

remote_url=ssh://
if [ "$username" != "" ]; then
    remote_url=${remote_url}${username}@
fi
remote_url=${remote_url}${hostname}:${port}/${repo}
if git config remote.${remote_name}.url 1> /dev/null; then
    current_url=$(git config remote.${remote_name}.url)
    if [ "${current_url}" != "${remote_url}" ]; then
        old_remote_name=old-${remote_name}
        if git config remote.${old_remote_name}.url; then
            die "ERROR: Cannot backup old ${remote_name} as '${old_remote_name}' because it already exists."
        fi
        git remote add ${old_remote_name} ${current_url}
        git remote set-url ${remote_name} ${remote_url}
    fi
else
    git remote add ${remote_name} ${remote_url}
fi

hook=${GIT_DIR}/hooks/commit-msg
tmp_hook=$TMPDIR/commit-msg.$$

scp_prefix=""
if [ "$username" != "" ]; then
    scp_prefix=${username}@
fi
scp -q -p -P ${port} ${scp_prefix}${hostname}:hooks/commit-msg ${tmp_hook} \
    || die "ERROR: Could not get commit-msg hook from server: $hostname"

if [ -f "${GIT_DIR}/hooks/commit-msg" ]; then
    if ! cmp --silent ${tmp_hook} ${hook}; then
        say "Warning: Skipping commit-msg hook install since one already exists."
    fi
else
    mv ${tmp_hook} ${hook}
fi

echo "\

If you have any commits that you did not push upstream then you should run
'git gerrit change-ids' before trying to push.  If you forget to do this
you will be reminded when you try to push.
"
